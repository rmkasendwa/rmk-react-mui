import{j as s}from"./jsx-runtime-DoEZbXM1.js";import{c as C,e as D,g as N,f as E}from"./defaultTheme-p7chgXuo.js";import{o as j}from"./omit-DeUwOvIA.js";import{r as e}from"./index-DyFhm7NF.js";import{u as M}from"./index-0hP6KIaD.js";import{o as B}from"./index-Bf2qc8Rt.js";import{u as U}from"./useThemeProps-Bd4KMueQ.js";import{B as p}from"./Box-Cv6nAA57.js";const H=l=>N("MuiRenderIfVisible",l),h={root:["root"]};E("MuiRenderIfVisible",Object.keys(h));const W=e.forwardRef(function(b,y){const a=U({props:b,name:"MuiRenderIfVisible"}),{className:d,initialVisible:f=!1,children:u,defaultPlaceholderDimensions:R={height:50},PlaceholderProps:g={},unWrapChildrenIfVisible:t=!1,displayPlaceholder:V=!0,onChangeVisibility:r,threshold:w=0,...T}=j(a,"stayRendered");let{stayRendered:m=!1}=a;const P=C(h,H,(()=>{if(d)return{root:d}})()),{sx:x,...I}=g;t&&(m=!0);const c=e.useRef(!0),n=e.useRef(f),v=e.useRef(R),o=e.useRef(r);e.useEffect(()=>{o.current=r},[r]);const{ref:q,inView:i}=M({initialInView:f,threshold:w});return e.useEffect(()=>{i&&(n.current=!0),o.current&&o.current(i)},[i]),e.useEffect(()=>(c.current=!0,()=>{c.current=!1}),[]),t&&(i||n.current)?s.jsx(s.Fragment,{children:u}):s.jsx(p,{ref:B([y,q]),...T,className:D(P.root),children:(()=>{if((i||m&&n.current)&&!t)return u;if(V)return s.jsx(p,{...I,sx:{...v.current,...x}})})()})});W.__docgenInfo={description:"",methods:[],displayName:"RenderIfVisible",props:{initialVisible:{required:!1,tsType:{name:"boolean"},description:`Whether the element should be visible initially or not.
Useful e.g. for always setting the first N items to visible.

@default false`},visibleOffset:{required:!1,tsType:{name:"number"},description:"How far outside the viewport in pixels should elements be considered visible?"},stayRendered:{required:!1,tsType:{name:"boolean"},description:"Should the element stay rendered after it becomes visible?"},rootNode:{required:!1,tsType:{name:"union",raw:"HTMLElement | null",elements:[{name:"HTMLElement"},{name:"null"}]},description:""},children:{required:!0,tsType:{name:"ReactNode"},description:"The element to render is visible"},defaultPlaceholderDimensions:{required:!1,tsType:{name:"DefaultPlaceholderDimensions"},description:`The default dimensions given to the placeholder element to avoid flickering.
Note: The placeholder dimensions will change when the element is rendered if they are different from the element dimensions`},PlaceholderProps:{required:!1,tsType:{name:"Partial",elements:[{name:"BoxProps"}],raw:"Partial<BoxProps>"},description:`Default width and height to be assigned to placeholder element

@default { height: 50 }`},displayPlaceholder:{required:!1,tsType:{name:"boolean"},description:`Determines if the placeholder should be displayed

@default true`},unWrapChildrenIfVisible:{required:!1,tsType:{name:"boolean"},description:`If true children elements will be rendered without a Box wrapper.
Note: If this property is set to true, it automatically sets stayRendered to true

@default false`},visibilityDelay:{required:!1,tsType:{name:"number"},description:`The time to wait for idle window before displaying visible element.

@default 600`},onChangeVisibility:{required:!1,tsType:{name:"signature",type:"function",raw:"(isVisible: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"isVisible"}],return:{name:"void"}}},description:""}},composes:["Partial"]};export{W as R};
