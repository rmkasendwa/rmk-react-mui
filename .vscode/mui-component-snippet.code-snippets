{
  "Mui React Component": {
    "scope": "javascript,typescript,typescriptreact",
    "prefix": "muicomp",
    "body": [
      "import {\r\n  BoxProps,\r\n  ComponentsOverrides,\r\n  ComponentsProps,\r\n  ComponentsVariants, generateUtilityClass,\r\n  generateUtilityClasses, unstable_composeClasses as composeClasses, useThemeProps\r\n} from '@mui/material';\r\nimport Box from '@mui/material/Box';\r\nimport clsx from 'clsx';\r\nimport { forwardRef } from 'react';\r\n\r\nexport interface ${1:${TM_FILENAME_BASE}}Classes {\r\n  /** Styles applied to the root element. */\r\n  root: string;\r\n}\r\n\r\nexport type ${1:${TM_FILENAME_BASE}}ClassKey = keyof ${1:${TM_FILENAME_BASE}}Classes;\r\n\r\n//#region Adding theme prop types\r\ndeclare module '@mui/material/styles/props' {\r\n  interface ComponentsPropsList {\r\n    Mui${1:${TM_FILENAME_BASE}}: ${1:${TM_FILENAME_BASE}}Props;\r\n  }\r\n}\r\n//#endregion\r\n\r\n//#region Adding theme override types\r\ndeclare module '@mui/material/styles/overrides' {\r\n  interface ComponentNameToClassKey {\r\n    Mui${1:${TM_FILENAME_BASE}}: keyof ${1:${TM_FILENAME_BASE}}Classes;\r\n  }\r\n}\r\n//#endregion\r\n\r\n//#region Adding theme component types\r\ndeclare module '@mui/material/styles/components' {\r\n  interface Components<Theme = unknown> {\r\n    Mui${1:${TM_FILENAME_BASE}}?: {\r\n      defaultProps?: ComponentsProps['Mui${1:${TM_FILENAME_BASE}}'];\r\n      styleOverrides?: ComponentsOverrides<Theme>['Mui${1:${TM_FILENAME_BASE}}'];\r\n      variants?: ComponentsVariants['Mui${1:${TM_FILENAME_BASE}}'];\r\n    };\r\n  }\r\n}\r\n//#endregion\r\n\r\nexport interface ${1:${TM_FILENAME_BASE}}Props extends Partial<BoxProps> {}\r\n\r\nexport function get${1:${TM_FILENAME_BASE}}UtilityClass(slot: string): string {\r\n  return generateUtilityClass('Mui${1:${TM_FILENAME_BASE}}', slot);\r\n}\r\n\r\nexport const ${2:${TM_FILENAME_BASE/(\\w)/${1:/downcase}/}}Classes: ${1:${TM_FILENAME_BASE}}Classes =\r\n  generateUtilityClasses('Mui${1:${TM_FILENAME_BASE}}', ['root']);\r\n\r\nconst slots: Record<${1:${TM_FILENAME_BASE}}ClassKey, [${1:${TM_FILENAME_BASE}}ClassKey]> = {\r\n  root: ['root'],\r\n};\r\n\r\nexport const ${1:${TM_FILENAME_BASE}} = forwardRef<HTMLDivElement, ${1:${TM_FILENAME_BASE}}Props>(function ${1:${TM_FILENAME_BASE}}(inProps, ref) {\r\n  const props = useThemeProps({ props: inProps, name: 'Mui${1:${TM_FILENAME_BASE}}' });\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = composeClasses(\r\n    slots,\r\n    get${1:${TM_FILENAME_BASE}}UtilityClass,\r\n    (() => {\r\n      if (className) {\r\n        return {\r\n          root: className,\r\n        };\r\n      }\r\n    })()\r\n  );\r\n\r\n  return (\r\n    <Box ref={ref} {...rest} className={clsx(classes.root)}></Box>\r\n  );\r\n});\r\n\r\nexport default ${1:${TM_FILENAME_BASE}};"
    ],
    "description": "Mui React Component"
  }
}